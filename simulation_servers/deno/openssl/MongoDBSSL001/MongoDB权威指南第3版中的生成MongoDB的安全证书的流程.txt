MongoDB权威指南第3版中的生成HTTPS证书的流程

Windows查看证书的命令：certmgr.msc（当前用户）、mmc（本地计算机）

关于在生成操作的过程中，对于输入值的说明：
1、以生成“MongoDBSSL001_Root_CA.crt”中的输入值为基准。
2、生成“MongoDBSSL001_MiddlemanSigning_CA.csr”时，输入值中除了“Common Name”选项的值可以跟“基准”的“Common Name”选项的值不一样（最好不一样），其他选项值都必须跟“基准”的一样。
3、生成“MongoDBSSL001_Servers_CA.csr”时，输入值中除了“Common Name”、“Organizational Unit Name”选项的值可以跟“基准”、“MongoDBSSL001_MiddlemanSigning_CA.csr”的“Common Name”、“Organizational Unit Name”选项的值不一样（最好不一样），其他选项值都必须跟“基准”的一样。
4、生成“MongoDBSSL001_Clients_CA.csr”时，输入值中除了“Common Name”、“Organizational Unit Name”选项的值可以跟“基准”、“MongoDBSSL001_MiddlemanSigning_CA.csr”的“Common Name”、“Organizational Unit Name”选项的值不一样（最好不一样），其他选项值都必须跟“基准”的一样。
5、多个“成员_服务端CA证书”之间的输入值中，“Organizational Unit Name”选项的值必须一样。
6、多个“客户端CA证书”之间的输入值中，“Organizational Unit Name”选项的值必须一样。
7、多个“成员_服务端CA证书”之间的输入值中，“Common Name”选项的值可以是各自不同的域名、IP，且该值也这只能是域名、IP。当然在生成的过程中可以通过设置“subjectAltName”来设置多个域名、IP别名。
8、多个“客户端CA证书”之间的输入值中，“Common Name”选项的值可以是各自不同的域名、IP，且该值也这只能是域名、IP。当然在生成的过程中可以通过设置“subjectAltName”来设置多个域名、IP别名。



注意：使用openssl_不带subjectAltName.cfg、openssl_不带subjectAltName.cnf、openssl-vms_不带subjectAltName.cnf！！！
第1步生成“私钥”：MongoDBSSL001_Root_CA_Key.key
在“生产环境”中，需要对“私钥，MongoDBSSL001_Root_CA_Key.key”进行加密保护：
openssl genrsa -aes256 -out MongoDBSSL001_Root_CA_Key.key 4096
执行输出：
Enter PEM pass phrase:@MongoDBSSL001.2024#
Verifying - Enter PEM pass phrase:@MongoDBSSL001.2024#



注意：使用openssl_不带subjectAltName.cfg、openssl_不带subjectAltName.cnf、openssl-vms_不带subjectAltName.cnf！！！
第2步生成“根证书/根CA”：MongoDBSSL001_Root_CA.crt
使用openssl req命令来创建“根证书/根CA，MongoDBSSL001_Root_CA.crt”。由于“根证书/根CA，MongoDBSSL001_Root_CA.crt”是权威链的最顶端，因此使用上一步创建的“私钥，MongoDBSSL001_Root_CA_Key.key”对此“根证书/根CA，MongoDBSSL001_Root_CA.crt”进行自签名。-x509选项会通知openssl req命令我们希望使用提供给-key选项的“私钥，MongoDBSSL001_Root_CA_Key.key”对“根证书/根CA，MongoDBSSL001_Root_CA.crt”进行自签名。输出是一个名为MongoDBSSL001_Root_CA.crt的“根证书/根CA，MongoDBSSL001_Root_CA.crt”文件：
openssl req -new -x509 -days 365 -key MongoDBSSL001_Root_CA_Key.key -out MongoDBSSL001_Root_CA.crt -config openssl.cnf
执行输出：
Enter pass phrase for MongoDBSSL001_Root_CA_Key.key:@MongoDBSSL001.2024#
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [CN]:CN
State or Province Name (full name) [GuangDong]:GuangDong
Locality Name (eg, city) [ShenZhen]:GuangZhou
Organization Name (eg, company) [MongoDBSSL001]:MongoDBSSL001
Organizational Unit Name (eg, section) [IT]:IT
Common Name (e.g. server FQDN or YOUR name) []:MongoDBSSL001_Root_CA
Email Address [2726893248@qq.com]:2726893248@qq.com



如果看一下“根证书/根CA，MongoDBSSL001_RootCA.crt”文件，你会发现它包含了“根证书/根CA，MongoDBSSL001_RootCA.crt”的公共证书。可以查看由以下命令
生成的一个可读版本来验证其内容：
openssl x509 -noout -text -in MongoDBSSL001_Root_CA.crt
输出：
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            57:20:b1:bf:ae:53:0b:f8:37:0d:7c:17:4f:68:23:16:7f:b2:b0:0e
        Signature Algorithm: sha512WithRSAEncryption
        Issuer: C=CN, ST=GuangDong, L=GuangZhou, O=MongoDBSSL001, OU=IT, CN=MongoDBSSL001_Root_CA, emailAddress=2726893248@qq.com
        Validity
            Not Before: Aug  8 18:39:10 2024 GMT
            Not After : Aug  8 18:39:10 2025 GMT
        Subject: C=CN, ST=GuangDong, L=GuangZhou, O=MongoDBSSL001, OU=IT, CN=MongoDBSSL001_Root_CA, emailAddress=2726893248@qq.com
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (4096 bit)
                Modulus:
                    00:b3:95:74:82:64:98:72:be:4f:c5:38:6f:31:b8:
                    0f:53:9d:8e:50:28:1c:d9:0b:8a:24:70:3d:3c:28:
                    10:93:9b:93:58:c9:ba:6e:37:3a:0b:6c:ba:da:b2:
                    f6:e1:63:58:49:cb:c4:08:7f:23:e8:20:fb:87:85:
                    69:2f:a3:3f:54:e6:3b:05:85:21:d9:52:40:26:91:
                    e5:59:e1:13:9e:3c:8c:ce:9d:05:ef:48:0e:06:c6:
                    f7:ad:ca:9f:41:5c:de:c0:96:e3:46:ca:02:c0:ac:
                    67:3e:e3:db:70:af:01:60:82:11:d6:19:a1:f3:1d:
                    c4:72:a0:49:5b:35:57:dd:ca:3e:fd:c7:22:05:3e:
                    ff:8f:48:80:a1:0c:bd:21:09:bd:54:51:e5:db:57:
                    5b:66:0d:30:dc:ae:a9:f6:3f:8e:80:16:f6:0d:b1:
                    22:68:36:30:f6:6d:d1:aa:15:ac:81:97:67:2e:2a:
                    cd:bf:0a:fa:7f:b8:4c:f5:f0:ed:6f:25:49:61:75:
                    2b:e1:c2:1d:2c:e4:58:4c:4e:8c:34:8c:db:84:24:
                    66:d9:cb:ca:36:e6:5b:96:5e:e6:ea:fe:e0:b7:ae:
                    f5:64:33:58:7b:bb:4c:75:8e:36:81:9a:25:08:91:
                    03:98:28:66:25:6e:b6:46:52:8d:4f:79:34:e3:8d:
                    86:8c:69:04:5b:71:41:36:17:a1:29:4c:4b:2a:3a:
                    b5:05:21:42:95:2c:cc:e9:46:a6:43:0e:60:d2:1b:
                    cf:ac:49:00:bb:40:60:d9:8a:5f:48:07:36:f8:02:
                    1b:ea:dc:04:02:f0:70:48:2e:a0:48:c0:6a:90:f4:
                    58:76:a5:9f:00:06:c2:63:38:2e:cc:7f:43:60:c5:
                    d8:59:e5:b6:e8:60:d8:2a:5f:8a:7b:f0:6c:a3:f1:
                    c3:95:a6:03:ff:17:58:27:59:bc:a8:8e:af:0f:fb:
                    81:69:02:92:14:b9:b6:66:7e:84:b6:a0:84:62:4e:
                    01:f1:ee:8c:86:85:54:89:0b:82:c8:28:72:2c:19:
                    89:a0:0d:c4:df:46:a7:6f:0e:38:79:1f:98:97:9b:
                    09:4c:cb:ce:17:8f:68:f5:44:68:1e:60:06:9e:ab:
                    58:c1:60:57:b7:b1:9c:bd:11:3d:80:44:68:ca:ec:
                    22:86:8f:84:67:07:58:15:9b:b3:84:91:50:bd:ce:
                    81:2b:94:0e:5d:b6:ca:6c:d9:81:cf:e6:b2:d2:5e:
                    12:7f:10:2e:a8:d6:52:3a:9c:3b:16:c5:b2:04:14:
                    a3:aa:b4:75:a1:bd:8c:61:b5:05:e9:1c:72:0c:9f:
                    87:9f:db:3c:17:37:0c:fa:b6:64:f4:8b:2c:b9:d3:
                    ee:35:eb
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Subject Key Identifier:
                B3:85:2C:6B:CA:3F:18:78:42:BD:83:E9:53:78:B6:B5:0E:A9:93:61
            X509v3 Basic Constraints: critical
                CA:TRUE
            X509v3 Authority Key Identifier:
                keyid:B3:85:2C:6B:CA:3F:18:78:42:BD:83:E9:53:78:B6:B5:0E:A9:93:61
                DirName:/C=CN/ST=GuangDong/L=GuangZhou/O=MongoDBSSL001/OU=IT/CN=MongoDBSSL001_Root_CA/emailAddress=2726893248@qq.com
                serial:57:20:B1:BF:AE:53:0B:F8:37:0D:7C:17:4F:68:23:16:7F:B2:B0:0E
            X509v3 Key Usage: critical
                Certificate Sign, CRL Sign
    Signature Algorithm: sha512WithRSAEncryption
    Signature Value:
        15:fd:83:b5:31:d7:ac:07:80:b4:9b:f8:2d:f6:15:bf:ad:ec:
        a0:e8:be:86:63:4c:85:f8:57:d5:59:84:00:23:c3:57:22:54:
        fa:1c:23:10:f1:4b:81:3e:d7:35:5e:af:d1:fb:b8:d1:63:44:
        07:27:32:85:ae:d5:5e:05:8b:ac:e6:e0:64:18:1c:43:09:91:
        10:0c:7e:e3:51:37:c3:a7:8b:e0:fc:94:56:f8:6f:ed:67:ec:
        be:a1:90:3c:dc:e0:1d:cb:1b:92:e9:1f:32:36:b7:3b:ad:dc:
        8c:97:94:90:4e:1e:19:38:af:7a:e1:06:55:3a:f1:d7:c3:22:
        82:1f:7f:ae:96:9d:c5:20:2b:c3:fb:45:36:d7:57:4f:3b:dd:
        a6:2e:40:bf:f2:6e:6f:cb:68:4b:5b:f7:46:11:7a:51:58:7c:
        6e:2e:06:9f:8c:78:5d:f7:78:df:ab:67:af:c8:50:d9:9c:3a:
        9a:54:70:1c:ed:22:e6:32:06:f0:91:06:f5:a5:15:7b:3e:14:
        3e:fb:7a:89:39:2f:bf:43:9b:b3:7e:ef:5d:ae:a0:32:c9:33:
        51:14:d5:91:f8:2d:cf:58:d8:d5:a3:98:4c:d7:e2:4c:f5:bf:
        82:e6:8e:f8:b4:cd:f5:81:82:d0:0d:26:09:49:be:4b:0d:a9:
        67:83:8c:15:89:d2:ed:d5:9e:00:44:5f:7e:1c:44:cb:d4:60:
        6f:d9:f6:9f:4b:c4:78:18:45:0a:fb:f5:bd:da:1a:8e:51:b6:
        1a:cb:b1:ba:2b:a8:b6:48:1f:6a:c3:03:9e:49:a2:73:8f:92:
        28:e6:93:dd:ed:6e:05:b1:4f:e9:f5:d0:f4:50:8d:1b:15:fb:
        f6:63:9b:c4:79:ee:a5:23:d1:20:68:4d:0d:82:cc:1c:5f:60:
        04:48:f7:6b:34:5e:86:bd:75:b9:d1:32:70:c1:52:f0:2e:1e:
        ea:c9:be:a9:81:17:64:4e:86:ae:b4:0d:1b:f0:85:c0:16:16:
        f2:b5:6a:73:3e:39:db:74:2f:8d:e8:2e:29:dd:70:6e:11:23:
        e7:c6:94:50:52:b9:b6:d1:a0:4c:34:f7:3d:10:94:23:9b:7c:
        4e:d7:ce:c8:14:e1:96:2b:00:8f:9c:90:01:cc:95:c3:09:03:
        b6:22:3c:74:86:c2:e5:25:28:e5:f3:0c:92:41:50:1b:9c:9d:
        86:f4:d3:55:3d:94:b0:41:3d:fc:79:d1:94:d2:d5:e0:bf:d9:
        45:de:ac:9e:55:0f:d4:33:d2:a8:f7:80:d9:d5:5e:98:23:73:
        ee:04:50:bc:72:70:0f:b1:aa:8b:c7:92:f9:88:fb:f3:b1:51:
        0f:b7:f9:70:95:73:d5:5e



注意：使用openssl_不带subjectAltName.cfg、openssl_不带subjectAltName.cnf、openssl-vms_不带subjectAltName.cnf！！！
第3步根据上面的第2步创建的“根证书/根CA，MongoDBSSL001_Root_CA.crt”再一次创建用于对“成员证书”和“客户端证书”进行签名的“中间签名CA，MongoDBSSL001_MiddlemanSigning_CA.crt”：
1）先再次生成一个“私钥，MongoDBSSL001_MiddlemanSigning_CA_Key.key”：
在“生产环境”中，需要对“私钥，MongoDBSSL001_MiddlemanSigning_CA_Key.key”进行加密保护：
openssl genrsa -aes256 -out MongoDBSSL001_MiddlemanSigning_CA_Key.key 4096
执行输出：
Enter PEM pass phrase:@MongoDBSSL001.2024#
Verifying - Enter PEM pass phrase:@MongoDBSSL001.2024#

2）再执行：
openssl req -new -key MongoDBSSL001_MiddlemanSigning_CA_Key.key -out MongoDBSSL001_MiddlemanSigning_CA.csr -config openssl.cnf
执行输出：
Enter pass phrase for MongoDBSSL001_MiddlemanSigning_CA_Key.key:@MongoDBSSL001.2024#
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [CN]:CN
State or Province Name (full name) [GuangDong]:GuangDong
Locality Name (eg, city) [ShenZhen]:GuangZhou
Organization Name (eg, company) [MongoDBSSL001]:MongoDBSSL001
Organizational Unit Name (eg, section) [IT]:IT
Common Name (e.g. server FQDN or YOUR name) []:MongoDBSSL001_MiddlemanSigning_CA
Email Address [2726893248@qq.com]:2726893248@qq.com

Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:@MongoDBSSL001.2024#
An optional company name [MongoDBSSL001]:MongoDBSSL001

3）最后执行：
openssl x509 -req -days 365 -in MongoDBSSL001_MiddlemanSigning_CA.csr -CA MongoDBSSL001_Root_CA.crt -CAkey MongoDBSSL001_Root_CA_Key.key -set_serial 01 -out MongoDBSSL001_MiddlemanSigning_CA.crt -extfile openssl.cnf -extensions v3_ca
执行输出：
Certificate request self-signature ok
subject=C = CN, ST = GuangDong, L = GuangZhou, O = MongoDBSSL001, OU = IT, CN = MongoDBSSL001_MiddlemanSigning_CA, emailAddress = 2726893248@qq.com
Enter pass phrase for MongoDBSSL001_Root_CA_Key.key:@MongoDBSSL001.2024#



第4步：MongoDBSSL001_Root_CA.pem
需要将“根证书/根CA，MongoDBSSL001_Root_CA.crt”（包含根公钥）和“中间签名CA，MongoDBSSL001_MiddlemanSigning_CA.crt”（包含签名公钥）
连接到一个“pem文件（MongoDBSSL001_Root_CA.pem）”中。这个文件（MongoDBSSL001_Root_CA.pem）稍后将作为“--tlsCAFile”选项的值提供给“mongod”或“客户端进程”。
1）先执行：
type MongoDBSSL001_Root_CA.crt > MongoDBSSL001_Root_CA.pem
2）再执行：
type MongoDBSSL001_MiddlemanSigning_CA.crt >> MongoDBSSL001_Root_CA.pem



创建用于“MongoDB集群”中身份验证的“成员证书/x.509服务器证书”（可以有多个）和“客户端证书”（可以有多个）。



注意：使用openssl_带subjectAltName.cfg、openssl_带subjectAltName.cnf、openssl-vms_带subjectAltName.cnf！！！
第5步：“成员证书/x.509服务器证书”，可以有多个，现在假定只创建一个“MongoDBSSL001_Servers_CA.crt”。
“成员证书”通常称为“x.509服务器证书”。应该对“mongod进程”和“mongos进程”使用该类型的证书（成员证书）。
“MongoDB集群成员”会使用这些证书（成员证书/x.509服务器证书）来验证集群中的“成员身份”。换句话说，“mongod”就是用“成员证书/x.509服务器证书”来为“副本集的其他成员”提供“身份验证”的。
1）创建新的“私钥，MongoDBSSL001_Servers_CA_Key.key”：
Windows不支持加密的key，加密会导致MongoDB无法启动：
openssl genrsa -out MongoDBSSL001_Servers_CA_Key.key 4096

2）为“私钥，MongoDBSSL001_Servers_CA_Key.key”生成“成员证书的签名请求，MongoDBSSL001_Servers_CA.csr”：
openssl req -new -key MongoDBSSL001_Servers_CA_Key.key -out MongoDBSSL001_Servers_CA.csr -config openssl.cnf
执行输出：
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [CN]:CN
State or Province Name (full name) [GuangDong]:GuangDong
Locality Name (eg, city) [ShenZhen]:GuangZhou
Organization Name (eg, company) [MongoDBSSL001]:MongoDBSSL001
Organizational Unit Name (eg, section) [IT]:MongoDBSSL001_Servers
Common Name (e.g. server FQDN or YOUR name) []:MongoDBSSL001_CommonName
Email Address [2726893248@qq.com]:2726893248@qq.com

Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:@MongoDBSSL001.2024#
An optional company name [MongoDBSSL001]:MongoDBSSL001

3）通过“中间签名CA，MongoDBSSL001_MiddlemanSigning_CA.crt”对“成员证书”进行签名：
openssl x509 -req -days 365 -in MongoDBSSL001_Servers_CA.csr -CA MongoDBSSL001_MiddlemanSigning_CA.crt -CAkey MongoDBSSL001_MiddlemanSigning_CA_Key.key -CAcreateserial -out MongoDBSSL001_Servers_CA.crt -extfile openssl.cnf -extensions v3_req
执行输出：
Certificate request self-signature ok
subject=C = CN, ST = GuangDong, L = GuangZhou, O = MongoDBSSL001, OU = MongoDBSSL001_Servers, CN = MongoDBSSL001_CommonName, emailAddress = 2726893248@qq.com
Enter pass phrase for MongoDBSSL001_MiddlemanSigning_CA_Key.key:@MongoDBSSL001.2024#

4）：
type MongoDBSSL001_Servers_CA.crt > MongoDBSSL001_Servers_CA.pem

5）：
type MongoDBSSL001_Servers_CA_Key.key >> MongoDBSSL001_Servers_CA.pem



注意：使用openssl_带subjectAltName.cfg、openssl_带subjectAltName.cnf、openssl-vms_带subjectAltName.cnf！！！
第6步：“客户端证书”，可以有多个，现在假定只创建一个“MongoDBSSL001_Clients_CA.crt”。
“客户端证书”用于“mongo shell”、“MongoDB Compass”、“MongoDB实用程序”和“工具”、“MongoDB驱动的应用程序”。
生成“客户端证书”的过程与生成“成员证书/x.509服务器证书”的过程基
本相同，唯一的区别是要确保O（Organization Name）、OU（Organizational Unit）和DC值的组合与上面生成的“成员证书/x.509服务器证书”不同。
1）：
Windows不支持加密的key，加密会导致MongoDB无法启动：
openssl genrsa -out MongoDBSSL001_Clients_CA_Key.key 4096

2）：
openssl req -new -key MongoDBSSL001_Clients_CA_Key.key -out MongoDBSSL001_Clients_CA.csr -config openssl.cnf
执行输出：
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [CN]:CN
State or Province Name (full name) [GuangDong]:GuangDong
Locality Name (eg, city) [ShenZhen]:GuangZhou
Organization Name (eg, company) [MongoDBSSL001]:MongoDBSSL001
Organizational Unit Name (eg, section) [IT]:MongoDBSSL001_Clients
Common Name (e.g. server FQDN or YOUR name) []:MongoDBSSL001_CommonName
Email Address [2726893248@qq.com]:2726893248@qq.com

Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:@MongoDBSSL001.2024#
An optional company name [MongoDBSSL001]:MongoDBSSL001

3）：
openssl x509 -req -days 365 -in MongoDBSSL001_Clients_CA.csr -CA MongoDBSSL001_MiddlemanSigning_CA.crt -CAkey MongoDBSSL001_MiddlemanSigning_CA_Key.key -CAcreateserial -out MongoDBSSL001_Clients_CA.crt -extfile openssl.cnf -extensions v3_req
执行输出：
Certificate request self-signature ok
subject=C = CN, ST = GuangDong, L = GuangZhou, O = MongoDBSSL001, OU = MongoDBSSL001_Clients, CN = MongoDBSSL001_CommonName, emailAddress = 2726893248@qq.com
Enter pass phrase for MongoDBSSL001_MiddlemanSigning_CA_Key.key:@MongoDBSSL001.2024#

4）：
type MongoDBSSL001_Clients_CA.crt > MongoDBSSL001_Clients_CA.pem

5）：
type MongoDBSSL001_Clients_CA_Key.key >> MongoDBSSL001_Clients_CA.pem



MongoDB的基本使用：
1、命令行中启动MongodDB：
mongod --config D:\MongoDB\App\bin\mongod.cfg

2、命令行中使用mongosh连接MongodDB数据库：
由于服务端启用了对客户端的身份认证以及客户端的操作权限限制，所以启用客户端时，需要客户端提供客户端自己的证书，并且客户端只能进行服务端已经授权给客户端自己的操作权限。
mongosh --host 127.0.0.1 --port 27777 --tls --tlsCertificateKeyFile D:\MongoDB\App\bin\ssl\MongoDBSSL001_Clients_CA.pem --tlsCAFile D:\MongoDB\App\bin\ssl\MongoDBSSL001_Root_CA.pem --authenticationDatabase "$external" --authenticationMechanism MONGODB-X509