#
# OpenSSL example configuration file.
# See doc/man5/config.pod for more info.
#
# This is mostly being used for generation of certificate requests,
# but may be used for auto loading of providers

# Note that you can include other files from the main configuration
# file using the .include directive.
#.include filename

# This definition stops the following lines choking if HOME isn't
# defined.
HOME			= .

 # Use this in order to automatically load providers.
openssl_conf = openssl_init

# Comment out the next line to ignore configuration errors
config_diagnostics = 1

# Extra OBJECT IDENTIFIER info:
# oid_file       = $ENV::HOME/.oid
oid_section = new_oids

# To use this configuration file with the "-extfile" option of the
# "openssl x509" utility, name here the section containing the
# X.509v3 extensions to use:
# extensions		=
# (Alternatively, use a configuration file that has only
# X.509v3 extensions in its main [= default] section.)

[ new_oids ]
# We can add new OIDs in here for use by 'ca', 'req' and 'ts'.
# Add a simple OID like this:
# testoid1=1.2.3.4
# Or use config file substitution like this:
# testoid2=${testoid1}.5.6

# Policies used by the TSA examples.
tsa_policy1 = 1.2.3.4.1
tsa_policy2 = 1.2.3.4.5.6
tsa_policy3 = 1.2.3.4.5.7

# For FIPS
# Optionally include a file that is generated by the OpenSSL fipsinstall
# application. This file contains configuration data required by the OpenSSL
# fips provider. It contains a named section e.g. [fips_sect] which is
# referenced from the [provider_sect] below.
# Refer to the OpenSSL security policy for more information.
# .include fipsmodule.cnf

[openssl_init]
providers = provider_sect

# List of providers to load
[provider_sect]
default = default_sect
# The fips section name should match the section name inside the
# included fipsmodule.cnf.
# fips = fips_sect

# If no providers are activated explicitly, the default one is activated implicitly.
# See man 7 OSSL_PROVIDER-default for more details.
#
# If you add a section explicitly activating any other provider(s), you most
# probably need to explicitly activate the default provider, otherwise it
# becomes unavailable in openssl.  As a consequence applications depending on
# OpenSSL may not work correctly which could lead to significant system
# problems including inability to remotely access the system.
[default_sect]
# activate = 1


####################################################################
[ ca ]
default_ca	= CA_default		# The default ca section

####################################################################
[ CA_default ]

dir		= ./demoCA		# Where everything is kept
certs		= $dir/certs		# Where the issued certs are kept
crl_dir		= $dir/crl		# Where the issued crl are kept
database	= $dir/index.txt	# database index file.
#unique_subject	= no			# Set to 'no' to allow creation of
					# several certs with same subject.
new_certs_dir	= $dir/newcerts		# default place for new certs.

certificate	= $dir/cacert.pem 	# The CA certificate
serial		= $dir/serial 		# The current serial number
crlnumber	= $dir/crlnumber	# the current crl number
					# must be commented out to leave a V1 CRL
crl		= $dir/crl.pem 		# The current CRL
private_key	= $dir/private/cakey.pem# The private key

x509_extensions	= usr_cert		# The extensions to add to the cert

# Comment out the following two lines for the "traditional"
# (and highly broken) format.
name_opt 	= ca_default		# Subject Name options
cert_opt 	= ca_default		# Certificate field options

# Extension copying option: use with caution.
# copy_extensions = copy

# Extensions to add to a CRL. Note: Netscape communicator chokes on V2 CRLs
# so this is commented out by default to leave a V1 CRL.
# crlnumber must also be commented out to leave a V1 CRL.
# crl_extensions	= crl_ext

default_days	= 365			# how long to certify for
default_crl_days= 30			# how long before next CRL
default_md	= sha512		# use public key default MD
preserve	= no			# keep passed DN ordering

# A few difference way of specifying how similar the request should look
# For type CA, the listed attributes must be the same, and the optional
# and supplied fields are just that :-)
policy		= policy_match

# For the CA policy
[ policy_match ]
countryName		= match
stateOrProvinceName	= match
organizationName	= match
organizationalUnitName	= optional
commonName		= supplied
emailAddress		= optional

# For the 'anything' policy
# At this point in time, you must list all acceptable 'object'
# types.
[ policy_anything ]
countryName		= optional
stateOrProvinceName	= optional
localityName		= optional
organizationName	= optional
organizationalUnitName	= optional
commonName		= supplied
emailAddress		= optional

####################################################################
[ req ]
default_bits		= 4096
default_keyfile 	= server.pem
default_md   =   sha512
distinguished_name	= req_distinguished_name
# The extensions to add to a certificate request
req_extensions = v3_req
# The extensions to add to the self signed cert
# 要添加到自签名证书的扩展名
x509_extensions	= v3_ca
attributes		= req_attributes

# Passwords for private keys if not present they will be prompted for
# input_password = secret
# output_password = secret

# This sets a mask for permitted string types. There are several options.
# default: PrintableString, T61String, BMPString.
# pkix	 : PrintableString, BMPString (PKIX recommendation before 2004)
# utf8only: only UTF8Strings (PKIX recommendation after 2004).
# nombstr : PrintableString, T61String (no BMPStrings or UTF8Strings).
# MASK:XXXX a literal mask value.
# WARNING: ancient versions of Netscape crash on BMPStrings or UTF8Strings.
string_mask = utf8only

[ req_distinguished_name ]
#国家/地区名称
countryName			= Country Name (2 letter code)
countryName_default		= CN
countryName_min			= 2
countryName_max			= 2

#州或省名称（全名）
stateOrProvinceName		= State or Province Name (full name)
stateOrProvinceName_default	= GuangDong
stateOrProvinceName_max = 64

#地点名称（如城市）
localityName			= Locality Name (eg, city)
localityName_default = ShenZhen
localityName_max = 64

#组织名称（如公司）
organizationName		= Organization Name (eg, company)
organizationName_default	=  MongoDBSSL001
organizationName_max = 64

# we can do this but it is not needed normally :-)
#1.organizationName		= Second Organization Name (eg, company)
#1.organizationName_default	= World Wide Web Pty Ltd

#组织单位名称（如部门）
organizationalUnitName		= Organizational Unit Name (eg, section)
organizationalUnitName_default	= IT
organizationalUnitName_max = 64

commonName			= Common Name (e.g. server FQDN or YOUR name)
commonName_max			= 64

emailAddress			= Email Address
emailAddress_default	= 2726893248@qq.com
emailAddress_max		= 64

# SET-ex3			= SET extension number 3

[ req_attributes ]
challengePassword		= A challenge password
challengePassword_min		= 6
challengePassword_max		= 10240

unstructuredName		= An optional company name
unstructuredName_default	=  MongoDBSSL001
unstructuredName_max = 64

[ usr_cert ]

# These extensions are added when 'ca' signs a request.

# This goes against PKIX guidelines but some CAs do it and some software
# requires this to avoid interpreting an end user certificate as a CA.

basicConstraints=CA:FALSE

# This is typical in keyUsage for a client certificate.
# keyUsage = nonRepudiation, digitalSignature, keyEncipherment

# PKIX recommendations harmless if included in all certificates.
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer

# This stuff is for subjectAltName and issuerAltname.
# Import the email address.
# subjectAltName=email:copy
# An alternative to produce certificates that aren't
# deprecated according to PKIX.
# subjectAltName=email:move

# Copy subject details
# issuerAltName=issuer:copy

# This is required for TSA certificates.
# extendedKeyUsage = critical,timeStamping

[ v3_req ]
subjectKeyIdentifier = hash
basicConstraints = CA:FALSE
keyUsage = critical, digitalSignature, keyEncipherment
nsComment = "OpenSSL Generated Certificate"
extendedKeyUsage = serverAuth, clientAuth
subjectAltName = @alt_names

[ alt_names ]
DNS.1 = localhost
IP.1 = 127.0.0.1
IP.2 = 192.168.1.1
IP.3 = 192.168.1.2
IP.4 = 192.168.1.3
IP.5 = 192.168.1.4
IP.6 = 192.168.1.5
IP.7 = 192.168.1.6
IP.8 = 192.168.1.7
IP.9 = 192.168.1.8
IP.10 = 192.168.1.9
IP.11 = 192.168.1.10
IP.12 = 192.168.1.11
IP.13 = 192.168.1.12
IP.14 = 192.168.1.13
IP.15 = 192.168.1.14
IP.16 = 192.168.1.15
IP.17 = 192.168.1.16
IP.18 = 192.168.1.17
IP.19 = 192.168.1.18
IP.20 = 192.168.1.19
IP.21 = 192.168.1.20
IP.22 = 192.168.1.21
IP.23 = 192.168.1.22
IP.24 = 192.168.1.23
IP.25 = 192.168.1.24
IP.26 = 192.168.1.25
IP.27 = 192.168.1.26
IP.28 = 192.168.1.27
IP.29 = 192.168.1.28
IP.30 = 192.168.1.29
IP.31 = 192.168.1.30
IP.32 = 192.168.1.31
IP.33 = 192.168.1.32
IP.34 = 192.168.1.33
IP.35 = 192.168.1.34
IP.36 = 192.168.1.35
IP.37 = 192.168.1.36
IP.38 = 192.168.1.37
IP.39 = 192.168.1.38
IP.40 = 192.168.1.39
IP.41 = 192.168.1.40
IP.42 = 192.168.1.41
IP.43 = 192.168.1.42
IP.44 = 192.168.1.43
IP.45 = 192.168.1.44
IP.46 = 192.168.1.45
IP.47 = 192.168.1.46
IP.48 = 192.168.1.47
IP.49 = 192.168.1.48
IP.50 = 192.168.1.49
IP.51 = 192.168.1.50
IP.52 = 192.168.1.51
IP.53 = 192.168.1.52
IP.54 = 192.168.1.53
IP.55 = 192.168.1.54
IP.56 = 192.168.1.55
IP.57 = 192.168.1.56
IP.58 = 192.168.1.57
IP.59 = 192.168.1.58
IP.60 = 192.168.1.59
IP.61 = 192.168.1.60
IP.62 = 192.168.1.61
IP.63 = 192.168.1.62
IP.64 = 192.168.1.63
IP.65 = 192.168.1.64
IP.66 = 192.168.1.65
IP.67 = 192.168.1.66
IP.68 = 192.168.1.67
IP.69 = 192.168.1.68
IP.70 = 192.168.1.69
IP.71 = 192.168.1.70
IP.72 = 192.168.1.71
IP.73 = 192.168.1.72
IP.74 = 192.168.1.73
IP.75 = 192.168.1.74
IP.76 = 192.168.1.75
IP.77 = 192.168.1.76
IP.78 = 192.168.1.77
IP.79 = 192.168.1.78
IP.80 = 192.168.1.79
IP.81 = 192.168.1.80
IP.82 = 192.168.1.81
IP.83 = 192.168.1.82
IP.84 = 192.168.1.83
IP.85 = 192.168.1.84
IP.86 = 192.168.1.85
IP.87 = 192.168.1.86
IP.88 = 192.168.1.87
IP.89 = 192.168.1.88
IP.90 = 192.168.1.89
IP.91 = 192.168.1.90
IP.92 = 192.168.1.91
IP.93 = 192.168.1.92
IP.94 = 192.168.1.93
IP.95 = 192.168.1.94
IP.96 = 192.168.1.95
IP.97 = 192.168.1.96
IP.98 = 192.168.1.97
IP.99 = 192.168.1.98
IP.100 = 192.168.1.99
IP.101 = 192.168.1.100
IP.102 = 192.168.2.1
IP.103 = 192.168.2.2
IP.104 = 192.168.2.3
IP.105 = 192.168.2.4
IP.106 = 192.168.2.5
IP.107 = 192.168.2.6
IP.108 = 192.168.2.7
IP.109 = 192.168.2.8
IP.110 = 192.168.2.9
IP.111 = 192.168.2.10
IP.112 = 192.168.2.11
IP.113 = 192.168.2.12
IP.114 = 192.168.2.13
IP.115 = 192.168.2.14
IP.116 = 192.168.2.15
IP.117 = 192.168.2.16
IP.118 = 192.168.2.17
IP.119 = 192.168.2.18
IP.120 = 192.168.2.19
IP.121 = 192.168.2.20
IP.122 = 192.168.2.21
IP.123 = 192.168.2.22
IP.124 = 192.168.2.23
IP.125 = 192.168.2.24
IP.126 = 192.168.2.25
IP.127 = 192.168.2.26
IP.128 = 192.168.2.27
IP.129 = 192.168.2.28
IP.130 = 192.168.2.29
IP.131 = 192.168.2.30
IP.132 = 192.168.2.31
IP.133 = 192.168.2.32
IP.134 = 192.168.2.33
IP.135 = 192.168.2.34
IP.136 = 192.168.2.35
IP.137 = 192.168.2.36
IP.138 = 192.168.2.37
IP.139 = 192.168.2.38
IP.140 = 192.168.2.39
IP.141 = 192.168.2.40
IP.142 = 192.168.2.41
IP.143 = 192.168.2.42
IP.144 = 192.168.2.43
IP.145 = 192.168.2.44
IP.146 = 192.168.2.45
IP.147 = 192.168.2.46
IP.148 = 192.168.2.47
IP.149 = 192.168.2.48
IP.150 = 192.168.2.49
IP.151 = 192.168.2.50
IP.152 = 192.168.2.51
IP.153 = 192.168.2.52
IP.154 = 192.168.2.53
IP.155 = 192.168.2.54
IP.156 = 192.168.2.55
IP.157 = 192.168.2.56
IP.158 = 192.168.2.57
IP.159 = 192.168.2.58
IP.160 = 192.168.2.59
IP.161 = 192.168.2.60
IP.162 = 192.168.2.61
IP.163 = 192.168.2.62
IP.164 = 192.168.2.63
IP.165 = 192.168.2.64
IP.166 = 192.168.2.65
IP.167 = 192.168.2.66
IP.168 = 192.168.2.67
IP.169 = 192.168.2.68
IP.170 = 192.168.2.69
IP.171 = 192.168.2.70
IP.172 = 192.168.2.71
IP.173 = 192.168.2.72
IP.174 = 192.168.2.73
IP.175 = 192.168.2.74
IP.176 = 192.168.2.75
IP.177 = 192.168.2.76
IP.178 = 192.168.2.77
IP.179 = 192.168.2.78
IP.180 = 192.168.2.79
IP.181 = 192.168.2.80
IP.182 = 192.168.2.81
IP.183 = 192.168.2.82
IP.184 = 192.168.2.83
IP.185 = 192.168.2.84
IP.186 = 192.168.2.85
IP.187 = 192.168.2.86
IP.188 = 192.168.2.87
IP.189 = 192.168.2.88
IP.190 = 192.168.2.89
IP.191 = 192.168.2.90
IP.192 = 192.168.2.91
IP.193 = 192.168.2.92
IP.194 = 192.168.2.93
IP.195 = 192.168.2.94
IP.196 = 192.168.2.95
IP.197 = 192.168.2.96
IP.198 = 192.168.2.97
IP.199 = 192.168.2.98
IP.200 = 192.168.2.99
IP.201 = 192.168.2.100


# Extensions to add to a certificate request

# 典型CA的扩展
[ v3_ca ]
subjectKeyIdentifier=hash
basicConstraints = critical,CA:true
authorityKeyIdentifier=keyid:always,issuer:always

# 密钥使用：这是CA证书的典型用法
# 不过，由于它会防止被用作测试自签名证书，因此最好在默认情况下忽略它
keyUsage = critical,keyCertSign,cRLSign

# Extensions for a typical CA

# PKIX recommendation.

# Key usage: this is typical for a CA certificate. However since it will
# prevent it being used as an test self-signed certificate it is best
# left out by default.
# keyUsage = cRLSign, keyCertSign

# Include email address in subject alt name: another PKIX recommendation
# subjectAltName=email:copy
# Copy issuer details
# issuerAltName=issuer:copy

# DER hex encoding of an extension: beware experts only!
# obj=DER:02:03
# Where 'obj' is a standard or added object
# You can even override a supported extension:
# basicConstraints= critical, DER:30:03:01:01:FF

[ crl_ext ]

# CRL extensions.
# Only issuerAltName and authorityKeyIdentifier make any sense in a CRL.

# issuerAltName=issuer:copy
authorityKeyIdentifier=keyid:always

[ proxy_cert_ext ]
# These extensions should be added when creating a proxy certificate

# This goes against PKIX guidelines but some CAs do it and some software
# requires this to avoid interpreting an end user certificate as a CA.

basicConstraints=CA:FALSE

# This is typical in keyUsage for a client certificate.
# keyUsage = nonRepudiation, digitalSignature, keyEncipherment

# PKIX recommendations harmless if included in all certificates.
subjectKeyIdentifier=hash
authorityKeyIdentifier=keyid,issuer

# This stuff is for subjectAltName and issuerAltname.
# Import the email address.
# subjectAltName=email:copy
# An alternative to produce certificates that aren't
# deprecated according to PKIX.
# subjectAltName=email:move

# Copy subject details
# issuerAltName=issuer:copy

# This really needs to be in place for it to be a proxy certificate.
proxyCertInfo=critical,language:id-ppl-anyLanguage,pathlen:3,policy:foo

####################################################################
[ tsa ]

default_tsa = tsa_config1	# the default TSA section

[ tsa_config1 ]

# These are used by the TSA reply generation only.
dir		= ./demoCA		# TSA root directory
serial		= $dir/tsaserial	# The current serial number (mandatory)
crypto_device	= builtin		# OpenSSL engine to use for signing
signer_cert	= $dir/tsacert.pem 	# The TSA signing certificate
					# (optional)
certs		= $dir/cacert.pem	# Certificate chain to include in reply
					# (optional)
signer_key	= $dir/private/tsakey.pem # The TSA private key (optional)
signer_digest  = sha512			# Signing digest to use. (Optional)
default_policy	= tsa_policy1		# Policy if request did not specify it
					# (optional)
other_policies	= tsa_policy2, tsa_policy3	# acceptable policies (optional)
digests     = sha1, sha256, sha384, sha512  # Acceptable message digests (mandatory)
accuracy	= secs:1, millisecs:500, microsecs:100	# (optional)
clock_precision_digits  = 0	# number of digits after dot. (optional)
ordering		= yes	# Is ordering defined for timestamps?
				# (optional, default: no)
tsa_name		= yes	# Must the TSA name be included in the reply?
				# (optional, default: no)
ess_cert_id_chain	= no	# Must the ESS cert id chain be included?
				# (optional, default: no)
ess_cert_id_alg		= sha512	# algorithm to compute certificate
				# identifier (optional, default: sha1)

[insta] # CMP using Insta Demo CA
# Message transfer
server = pki.certificate.fi:8700
# proxy = # set this as far as needed, e.g., http://192.168.1.1:8080
# tls_use = 0
path = pkix/

# Server authentication
recipient = "/C=FI/O=Insta Demo/CN=Insta Demo CA" # or set srvcert or issuer
ignore_keyusage = 1 # potentially needed quirk
unprotected_errors = 1 # potentially needed quirk
extracertsout = insta.extracerts.pem

# Client authentication
ref = 3078 # user identification
secret = pass:insta # can be used for both client and server side

# Generic message options
cmd = ir # default operation, can be overridden on cmd line with, e.g., kur

# Certificate enrollment
subject = "/CN=openssl-cmp-test"
newkey = insta.priv.pem
out_trusted = insta.ca.crt
certout = insta.cert.pem

[pbm] # Password-based protection for Insta CA
# Server and client authentication
ref = $insta::ref # 3078
secret = $insta::secret # pass:insta

[signature] # Signature-based protection for Insta CA
# Server authentication
trusted = insta.ca.crt # does not include keyUsage digitalSignature

# Client authentication
secret = # disable PBM
key = $insta::newkey # insta.priv.pem
cert = $insta::certout # insta.cert.pem

[ir]
cmd = ir

[cr]
cmd = cr

[kur]
# Certificate update
cmd = kur
oldcert = $insta::certout # insta.cert.pem

[rr]
# Certificate revocation
cmd = rr
oldcert = $insta::certout # insta.cert.pem
