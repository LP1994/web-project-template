#配置环境变量，也支持自定义的环境变量。
#详细见：https://docs.deno.com/runtime/reference/env_variables/

#HTTP_PROXY="http://127.0.0.1:3067"
#HTTPS_PROXY="http://127.0.0.1:3067"

#DENO_V8_FLAGS="--max-old-space-size=1024000"
#DENO_JOBS=30

#DENO_WEBGPU_BACKEND="dx12,vulkan,opengl,metal"
#主要区别总结
#API         平台               控制级别     优势                    缺点
#DX12        Windows、Xbox      低级别       高性能、适合多线程      仅限Windows平台
#Vulkan      跨平台             低级别       跨平台、性能强大        开发复杂度高
#OpenGL      跨平台             高级别       易于上手、跨平台        性能优化空间较小
#Metal       苹果生态系统       低级别       苹果平台性能优异        仅限苹果平台
#-----------------------------------------------------------------------------------------------------------------------------------------------------
#1. DirectX 12 (DX12)
#开发者：由微软开发，专为 Windows 和 Xbox 平台设计。
#特性：DX12 是一个低级图形 API，允许开发者以更细粒度的方式控制硬件，以提高性能。这种控制可以减少 CPU 负载，提升多线程的渲染效率，从而最大限度地利用现代显卡的多核心特性。
#平台：主要用于 Windows 10 及以上系统和 Xbox，无法在其他操作系统上使用。
#优点：高效、对多线程友好，适合在 Windows 平台上进行高性能的游戏开发。
#缺点：因为是微软的专属技术，它的跨平台能力较差。
#2. Vulkan
#开发者：由 Khronos Group 推出，接替 OpenGL 的高级图形 API。
#特性：Vulkan 是一个低级的跨平台图形 API，类似于 DX12，允许开发者更直接控制硬件资源以提高性能。它对多线程支持更好，可以有效减少 CPU 开销，并且适合用于高性能图形和计算工作负载。
#平台：Vulkan 是跨平台的，可以在 Windows、Linux、Android、iOS 以及 macOS（通过第三方支持）等多个操作系统上使用。
#优点：跨平台性好，适合多线程和高性能图形渲染。
#缺点：相比于 OpenGL，开发复杂度较高，因为需要开发者管理更多的资源和硬件细节。
#3. OpenGL
#开发者：由 Khronos Group 开发，最初的图形 API 标准之一。
#特性：OpenGL 是一个高级图形 API，提供相对简单的接口来实现 2D 和 3D 图形渲染。OpenGL 的设计偏向于较高层的抽象，开发者不必处理底层的硬件资源管理，适合快速开发。
#平台：具有良好的跨平台能力，支持 Windows、Linux、macOS、Android 和 iOS 等。
#优点：易于上手，兼容性强，适合开发跨平台应用。
#缺点：相比于 Vulkan 和 DX12，OpenGL 对硬件的控制较少，性能优化空间较低。
#4. Metal
#开发者：由苹果公司开发，专为苹果生态系统设计。
#特性：Metal 是一个低级图形 API，提供对硬件的高效控制，以实现更好的性能和更低的延迟。类似于 DX12 和 Vulkan，Metal 允许开发者直接访问硬件资源，减少 CPU 的开销。
#平台：仅支持苹果的设备，包括 iOS、macOS 和 tvOS。
#优点：在苹果设备上性能优异，与苹果硬件高度优化，可以更好地利用苹果的 CPU 和 GPU。
#缺点：仅适用于苹果平台，缺乏跨平台能力。
