MongoDB权威指南第3版中的生成HTTPS证书的流程

Windows查看证书的命令：certmgr.msc（当前用户）、mmc（本地计算机）

关于在生成操作的过程中，对于输入值的说明：
1、以生成“MongoDBSSL001_Root_CA.crt”中的输入值为基准。
2、生成“MongoDBSSL001_MiddlemanSigning_CA.csr”时，输入值中除了“Common Name”选项的值可以跟“基准”的“Common Name”选项的值不一样（最好不一样），其他选项值都必须跟“基准”的一样。
3、生成“MongoDBSSL001_Servers_192_168_10_101_CA.csr”时，输入值中除了“Common Name”、“Organizational Unit Name”选项的值可以跟“基准”、“MongoDBSSL001_MiddlemanSigning_CA.csr”的“Common Name”、“Organizational Unit Name”选项的值不一样（最好不一样），其他选项值都必须跟“基准”的一样。
4、生成“MongoDBSSL001_Clients_192_168_10_101_CA.csr”时，输入值中除了“Common Name”、“Organizational Unit Name”选项的值可以跟“基准”、“MongoDBSSL001_MiddlemanSigning_CA.csr”的“Common Name”、“Organizational Unit Name”选项的值不一样（最好不一样），其他选项值都必须跟“基准”的一样。
5、多个“成员_服务端CA证书”之间的输入值中，“Organizational Unit Name”选项的值必须一样。
6、多个“客户端CA证书”之间的输入值中，“Organizational Unit Name”选项的值必须一样。
7、多个“成员_服务端CA证书”之间的输入值中，“Common Name”选项的值可以是各自不同的域名、IP，且该值也这只能是域名、IP。当然在生成的过程中可以通过设置“subjectAltName”来设置多个域名、IP别名。
8、多个“客户端CA证书”之间的输入值中，“Common Name”选项的值可以是各自不同的域名、IP，且该值也这只能是域名、IP。当然在生成的过程中可以通过设置“subjectAltName”来设置多个域名、IP别名。



注意：使用openssl_不带subjectAltName.cfg、openssl_不带subjectAltName.cnf、openssl-vms_不带subjectAltName.cnf！！！
第1步生成“私钥”：MongoDBSSL001_Root_CA_Key.key
在“生产环境”中，需要对“私钥，MongoDBSSL001_Root_CA_Key.key”进行加密保护：
openssl genrsa -aes256 -out MongoDBSSL001_Root_CA_Key.key 4096
执行输出：
Enter PEM pass phrase:@MongoDBSSL001.2022#
Verifying - Enter PEM pass phrase:@MongoDBSSL001.2022#



注意：使用openssl_不带subjectAltName.cfg、openssl_不带subjectAltName.cnf、openssl-vms_不带subjectAltName.cnf！！！
第2步生成“根证书/根CA”：MongoDBSSL001_Root_CA.crt
使用openssl req命令来创建“根证书/根CA，MongoDBSSL001_Root_CA.crt”。由于“根证书/根CA，MongoDBSSL001_Root_CA.crt”是权威链的最顶端，因此使用上一步创建的“私钥，MongoDBSSL001_Root_CA_Key.key”对此“根证书/根CA，MongoDBSSL001_Root_CA.crt”进行自签名。-x509选项会通知openssl req命令我们希望使用提供给-key选项的“私钥，MongoDBSSL001_Root_CA_Key.key”对“根证书/根CA，MongoDBSSL001_Root_CA.crt”进行自签名。输出是一个名为MongoDBSSL001_Root_CA.crt的“根证书/根CA，MongoDBSSL001_Root_CA.crt”文件：
openssl req -new -x509 -days 365 -key MongoDBSSL001_Root_CA_Key.key -out MongoDBSSL001_Root_CA.crt -config openssl.cnf
执行输出：
Enter pass phrase for MongoDBSSL001_Root_CA_Key.key:@MongoDBSSL001.2022#
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [CN]:CN
State or Province Name (full name) [GuangDong]:GuangDong
Locality Name (eg, city) [ShenZhen]:ShenZhen
Organization Name (eg, company) [MongoDBSSL001]:MongoDBSSL001
Organizational Unit Name (eg, section) [IT]:IT
Common Name (e.g. server FQDN or YOUR name) []:MongoDBSSL001_Root_CA
Email Address [2726893248@qq.com]:2726893248@qq.com



如果看一下“根证书/根CA，MongoDBSSL001_RootCA.crt”文件，你会发现它包含了“根证书/根CA，MongoDBSSL001_RootCA.crt”的公共证书。可以查看由以下命令
生成的一个可读版本来验证其内容：
openssl x509 -noout -text -in MongoDBSSL001_Root_CA.crt
输出：
Certificate:
    Data:
        Version: 3 (0x2)
        Serial Number:
            36:0f:5d:e7:4f:bb:6e:29:29:c9:ec:c9:43:1d:df:da:d1:b9:9d:55
        Signature Algorithm: sha512WithRSAEncryption
        Issuer: C = CN, ST = GuangDong, L = ShenZhen, O = MongoDBSSL001, OU = IT, CN = MongoDBSSL001_Root_CA, emailAddress = 2726893248@qq.com
        Validity
            Not Before: Dec  5 19:33:33 2022 GMT
            Not After : Dec  5 19:33:33 2023 GMT
        Subject: C = CN, ST = GuangDong, L = ShenZhen, O = MongoDBSSL001, OU = IT, CN = MongoDBSSL001_Root_CA, emailAddress = 2726893248@qq.com
        Subject Public Key Info:
            Public Key Algorithm: rsaEncryption
                Public-Key: (4096 bit)
                Modulus:
                    00:c4:b9:8b:42:ae:48:2f:e5:ee:47:84:9c:a0:35:
                    50:dd:c3:1d:b2:63:59:48:1a:f5:bf:e1:6d:1d:64:
                    db:f1:5a:0a:76:4a:bf:66:41:20:2b:27:da:39:c3:
                    c7:5f:d4:23:36:ec:29:41:f4:7f:33:01:96:a9:33:
                    36:c3:11:4d:44:cf:05:27:78:1a:26:e9:6c:31:d2:
                    de:e5:0a:7e:1f:19:64:fd:0f:60:38:85:c1:99:5e:
                    48:df:dd:f3:04:66:0c:7c:f8:c2:bf:45:38:fa:1f:
                    d0:9d:f3:1f:58:3e:cd:9c:27:68:35:49:9b:a1:a7:
                    7a:70:5d:ae:80:92:21:f2:6d:59:29:88:e0:00:b2:
                    f2:fb:37:cb:ab:b2:c8:3d:0b:ab:18:e2:78:c7:ce:
                    91:98:fb:27:fb:a4:63:a9:b6:91:e5:da:00:bf:b9:
                    f6:12:3c:d1:e8:ee:2e:76:52:19:a9:a1:41:22:f1:
                    1b:38:11:10:2a:e6:d9:9b:19:24:45:49:c2:fe:6b:
                    8d:1b:3f:67:7a:ea:4f:5f:28:31:ca:bb:6b:33:d4:
                    f6:6b:d2:3a:6d:41:fc:7d:fc:95:31:e6:00:e6:0e:
                    62:85:bb:b7:0d:2a:4a:b8:26:23:3c:ff:9b:22:cc:
                    24:06:0c:e0:30:1a:bd:8c:90:18:82:f4:b0:e1:33:
                    cc:09:53:c7:bf:e1:c9:9d:f5:ce:bc:79:22:08:0a:
                    f6:10:dc:ca:da:68:06:a5:2a:4d:7a:c2:46:dd:23:
                    06:b8:f8:72:85:4e:07:75:06:c3:fd:32:e7:33:1c:
                    6b:38:64:41:97:1e:c6:6f:f9:e5:83:f8:e7:e4:e8:
                    72:c5:cb:29:71:6f:6c:25:a6:e1:e2:c1:85:56:ec:
                    fb:64:ea:87:5d:e4:ce:c6:ff:ae:fe:cf:fa:3c:20:
                    6f:a6:3b:3b:13:6e:be:2f:8f:b9:4d:59:d3:ef:f2:
                    00:55:6a:89:f7:d5:28:92:69:17:62:89:72:b8:34:
                    f7:05:c8:eb:89:3a:ae:49:66:a4:9b:99:f3:26:19:
                    fb:b2:0d:41:0f:22:98:c0:f7:0d:09:cb:8c:e0:46:
                    c7:47:0a:9b:30:95:8d:9a:15:09:3a:e0:46:4f:59:
                    75:0c:69:c7:d8:1f:23:86:35:e9:91:28:9f:a5:82:
                    5f:5e:69:9c:3e:6b:a7:4c:b9:8b:2f:c0:c2:6a:38:
                    3d:0f:3b:60:d8:a7:b1:0a:c5:8d:0e:f3:f6:35:4d:
                    2e:14:13:b2:8b:d2:21:81:76:7c:ba:ee:a0:21:0f:
                    42:74:db:3c:2c:81:d7:9f:b7:40:72:16:e9:1c:91:
                    eb:76:9e:b7:51:cc:db:72:d5:a1:23:ea:11:bf:04:
                    84:f0:33
                Exponent: 65537 (0x10001)
        X509v3 extensions:
            X509v3 Subject Key Identifier:
                8A:BF:1B:8C:5A:13:FF:F4:A6:8B:C8:69:2E:A0:25:E8:8C:3A:8B:F9
            X509v3 Basic Constraints: critical
                CA:TRUE
            X509v3 Authority Key Identifier:
                keyid:8A:BF:1B:8C:5A:13:FF:F4:A6:8B:C8:69:2E:A0:25:E8:8C:3A:8B:F9
                DirName:/C=CN/ST=GuangDong/L=ShenZhen/O=MongoDBSSL001/OU=IT/CN=MongoDBSSL001_Root_CA/emailAddress=2726893248@qq.com
                serial:36:0F:5D:E7:4F:BB:6E:29:29:C9:EC:C9:43:1D:DF:DA:D1:B9:9D:55
            X509v3 Key Usage: critical
                Certificate Sign, CRL Sign
    Signature Algorithm: sha512WithRSAEncryption
    Signature Value:
        7c:cf:3b:67:d8:e5:68:2e:be:d9:c9:e6:73:d4:ff:19:91:70:
        94:df:14:1e:f6:96:16:7b:0a:56:dc:f4:dd:31:9f:77:df:9c:
        d6:0e:6d:fa:f6:c9:d8:be:e3:66:33:6b:d7:33:59:be:db:17:
        af:b4:86:e0:94:91:17:39:f7:d7:92:36:45:05:99:2b:1e:c9:
        b5:8d:02:53:41:62:a0:16:6d:91:47:51:ae:83:4b:61:28:34:
        4d:63:c0:2b:3f:da:b1:69:b1:d8:1c:49:40:60:09:b5:0e:48:
        7d:b8:b2:52:37:24:ec:9a:51:15:5d:a0:be:ef:07:73:9f:c3:
        1a:26:ff:2a:56:26:63:13:4d:e5:1b:8e:02:10:0a:ad:e9:e4:
        44:70:bb:4c:d2:db:4c:cd:f8:f5:1c:06:8e:1e:64:c3:db:94:
        d9:03:6e:25:74:4e:ef:7f:96:c3:31:51:3b:b7:b9:67:cd:2b:
        43:d2:9f:71:d3:bf:61:e2:3f:af:12:15:92:92:e1:65:64:0f:
        d5:b7:b0:87:ec:12:87:dc:0a:f8:30:20:31:f6:88:cd:25:74:
        c6:d1:0a:f4:db:69:0b:7d:f6:76:0f:70:21:80:c5:02:88:25:
        27:9e:ac:55:27:3e:cd:49:97:4e:d4:38:50:96:9f:c5:9c:a2:
        2e:d3:b1:83:7b:a8:fe:8f:72:48:1d:23:67:c4:e4:44:90:22:
        52:50:cb:36:a0:95:2a:d9:ee:05:10:ef:32:9a:e1:b0:b5:4d:
        c4:5a:bb:32:ef:db:c2:dd:d1:54:fb:ba:85:74:d2:2e:2f:80:
        31:0b:52:a3:c5:f5:e1:7f:82:fb:e6:a7:bd:0e:12:0e:5f:2d:
        7f:e1:fe:a6:10:76:92:d0:fa:19:85:91:6b:48:7a:85:9c:d3:
        27:ed:aa:8a:ba:10:b0:9c:8c:e6:9d:ef:e5:09:9c:9e:ea:d5:
        cd:64:c3:2a:55:86:57:cd:62:9c:53:b6:40:ef:92:11:27:a4:
        74:88:7e:91:77:e7:e8:fd:63:35:4b:96:3e:40:5b:c5:bc:e0:
        7c:8b:b8:8a:b9:9e:e1:56:1c:28:4b:5d:7d:b9:e0:b4:ed:0b:
        71:d4:54:12:97:9b:a5:fe:54:a1:c7:45:17:c6:3a:6e:2a:9e:
        97:46:90:18:29:08:73:25:bb:c8:dd:46:10:9b:34:af:7b:41:
        72:dc:47:4e:cb:00:38:74:17:9a:d6:be:a9:28:44:bb:c2:b4:
        91:c5:89:e4:08:9d:69:9f:c9:9b:9d:23:79:9d:9b:b1:f1:1e:
        29:e5:81:76:30:5d:33:fe:19:5d:36:4e:56:37:21:f7:f3:b3:
        b6:ed:39:74:98:a8:b6:2c



注意：使用openssl_不带subjectAltName.cfg、openssl_不带subjectAltName.cnf、openssl-vms_不带subjectAltName.cnf！！！
第3步根据上面的第2步创建的“根证书/根CA，MongoDBSSL001_Root_CA.crt”再一次创建用于对“成员证书”和“客户端证书”进行签名的“中间签名CA，MongoDBSSL001_MiddlemanSigning_CA.crt”：
1）先再次生成一个“私钥，MongoDBSSL001_MiddlemanSigning_CA_Key.key”：
在“生产环境”中，需要对“私钥，MongoDBSSL001_MiddlemanSigning_CA_Key.key”进行加密保护：
openssl genrsa -aes256 -out MongoDBSSL001_MiddlemanSigning_CA_Key.key 4096
执行输出：
Enter PEM pass phrase:@MongoDBSSL001.2022#
Verifying - Enter PEM pass phrase:@MongoDBSSL001.2022#

2）再执行：
openssl req -new -key MongoDBSSL001_MiddlemanSigning_CA_Key.key -out MongoDBSSL001_MiddlemanSigning_CA.csr -config openssl.cnf
执行输出：
Enter pass phrase for MongoDBSSL001_MiddlemanSigning_CA_Key.key:@MongoDBSSL001.2022#
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [CN]:CN
State or Province Name (full name) [GuangDong]:GuangDong
Locality Name (eg, city) [ShenZhen]:ShenZhen
Organization Name (eg, company) [MongoDBSSL001]:MongoDBSSL001
Organizational Unit Name (eg, section) [IT]:IT
Common Name (e.g. server FQDN or YOUR name) []:MongoDBSSL001_MiddlemanSigning_CA
Email Address [2726893248@qq.com]:2726893248@qq.com

Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:@MongoDBSSL001.2022#
An optional company name [MongoDBSSL001]:MongoDBSSL001

3）最后执行：
openssl x509 -req -days 365 -in MongoDBSSL001_MiddlemanSigning_CA.csr -CA MongoDBSSL001_Root_CA.crt -CAkey MongoDBSSL001_Root_CA_Key.key -set_serial 01 -out MongoDBSSL001_MiddlemanSigning_CA.crt -extfile openssl.cnf -extensions v3_ca
执行输出：
Certificate request self-signature ok
subject=C = CN, ST = GuangDong, L = ShenZhen, O = MongoDBSSL001, OU = IT, CN = MongoDBSSL001_MiddlemanSigning_CA, emailAddress = 2726893248@qq.com
Enter pass phrase for MongoDBSSL001_Root_CA_Key.key:@MongoDBSSL001.2022#



第4步：MongoDBSSL001_Root_CA.pem
需要将“根证书/根CA，MongoDBSSL001_Root_CA.crt”（包含根公钥）和“中间签名CA，MongoDBSSL001_MiddlemanSigning_CA.crt”（包含签名公钥）
连接到一个“pem文件（MongoDBSSL001_Root_CA.pem）”中。这个文件（MongoDBSSL001_Root_CA.pem）稍后将作为“--tlsCAFile”选项的值提供给“mongod”或“客户端进程”。
1）先执行：
type MongoDBSSL001_Root_CA.crt > MongoDBSSL001_Root_CA.pem
2）再执行：
type MongoDBSSL001_MiddlemanSigning_CA.crt >> MongoDBSSL001_Root_CA.pem



创建用于“MongoDB集群”中身份验证的“成员证书/x.509服务器证书”（可以有多个）和“客户端证书”（可以有多个）。



注意：使用openssl_带subjectAltName.cfg、openssl_带subjectAltName.cnf、openssl-vms_带subjectAltName.cnf！！！
第5步：“成员证书/x.509服务器证书”，可以有多个，现在假定只创建一个“MongoDBSSL001_Servers_192_168_10_101_CA.crt”。
“成员证书”通常称为“x.509服务器证书”。应该对“mongod进程”和“mongos进程”使用该类型的证书（成员证书）。
“MongoDB集群成员”会使用这些证书（成员证书/x.509服务器证书）来验证集群中的“成员身份”。换句话说，“mongod”就是用“成员证书/x.509服务器证书”来为“副本集的其他成员”提供“身份验证”的。
1）创建新的“私钥，MongoDBSSL001_Servers_192_168_10_101_CA_Key.key”：
Windows不支持加密的key，加密会导致MongoDB无法启动：
openssl genrsa -out MongoDBSSL001_Servers_192_168_10_101_CA_Key.key 4096

2）为“私钥，MongoDBSSL001_Servers_192_168_10_101_CA_Key.key”生成“成员证书的签名请求，MongoDBSSL001_Servers_192_168_10_101_CA.csr”：
openssl req -new -key MongoDBSSL001_Servers_192_168_10_101_CA_Key.key -out MongoDBSSL001_Servers_192_168_10_101_CA.csr -config openssl.cnf
执行输出：
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [CN]:CN
State or Province Name (full name) [GuangDong]:GuangDong
Locality Name (eg, city) [ShenZhen]:ShenZhen
Organization Name (eg, company) [MongoDBSSL001]:MongoDBSSL001
Organizational Unit Name (eg, section) [IT]:MongoDBSSL001_Servers
Common Name (e.g. server FQDN or YOUR name) []:192.168.10.101
Email Address [2726893248@qq.com]:2726893248@qq.com

Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:@MongoDBSSL001.2022#
An optional company name [MongoDBSSL001]:MongoDBSSL001

3）通过“中间签名CA，MongoDBSSL001_MiddlemanSigning_CA.crt”对“成员证书”进行签名：
openssl x509 -req -days 365 -in MongoDBSSL001_Servers_192_168_10_101_CA.csr -CA MongoDBSSL001_MiddlemanSigning_CA.crt -CAkey MongoDBSSL001_MiddlemanSigning_CA_Key.key -CAcreateserial -out MongoDBSSL001_Servers_192_168_10_101_CA.crt -extfile openssl.cnf -extensions v3_req
执行输出：
Certificate request self-signature ok
subject=C = CN, ST = GuangDong, L = ShenZhen, O = MongoDBSSL001, OU = MongoDBSSL001_Servers, CN = 192.168.10.101, emailAddress = 2726893248@qq.com
Enter pass phrase for MongoDBSSL001_MiddlemanSigning_CA_Key.key:@MongoDBSSL001.2022#

4）：
type MongoDBSSL001_Servers_192_168_10_101_CA.crt > MongoDBSSL001_Servers_192_168_10_101_CA.pem

5）：
type MongoDBSSL001_Servers_192_168_10_101_CA_Key.key >> MongoDBSSL001_Servers_192_168_10_101_CA.pem



注意：使用openssl_带subjectAltName.cfg、openssl_带subjectAltName.cnf、openssl-vms_带subjectAltName.cnf！！！
第6步：“客户端证书”，可以有多个，现在假定只创建一个“MongoDBSSL001_Clients_192_168_10_101_CA.crt”。
“客户端证书”用于“mongo shell”、“MongoDB Compass”、“MongoDB实用程序”和“工具”、“MongoDB驱动的应用程序”。
生成“客户端证书”的过程与生成“成员证书/x.509服务器证书”的过程基
本相同，唯一的区别是要确保O（Organization Name）、OU（Organizational Unit）和DC值的组合与上面生成的“成员证书/x.509服务器证书”不同。
1）：
Windows不支持加密的key，加密会导致MongoDB无法启动：
openssl genrsa -out MongoDBSSL001_Clients_192_168_10_101_CA_Key.key 4096

2）：
openssl req -new -key MongoDBSSL001_Clients_192_168_10_101_CA_Key.key -out MongoDBSSL001_Clients_192_168_10_101_CA.csr -config openssl.cnf
执行输出：
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter '.', the field will be left blank.
-----
Country Name (2 letter code) [CN]:CN
State or Province Name (full name) [GuangDong]:GuangDong
Locality Name (eg, city) [ShenZhen]:ShenZhen
Organization Name (eg, company) [MongoDBSSL001]:MongoDBSSL001
Organizational Unit Name (eg, section) [IT]:MongoDBSSL001_Clients
Common Name (e.g. server FQDN or YOUR name) []:192.168.10.101
Email Address [2726893248@qq.com]:2726893248@qq.com

Please enter the following 'extra' attributes
to be sent with your certificate request
A challenge password []:@MongoDBSSL001.2022#
An optional company name [MongoDBSSL001]:MongoDBSSL001

3）：
openssl x509 -req -days 365 -in MongoDBSSL001_Clients_192_168_10_101_CA.csr -CA MongoDBSSL001_MiddlemanSigning_CA.crt -CAkey MongoDBSSL001_MiddlemanSigning_CA_Key.key -CAcreateserial -out MongoDBSSL001_Clients_192_168_10_101_CA.crt -extfile openssl.cnf -extensions v3_req
执行输出：
Certificate request self-signature ok
subject=C = CN, ST = GuangDong, L = ShenZhen, O = MongoDBSSL001, OU = MongoDBSSL001_Clients, CN = 192.168.10.101, emailAddress = 2726893248@qq.com
Enter pass phrase for MongoDBSSL001_MiddlemanSigning_CA_Key.key:@MongoDBSSL001.2022#

4）：
type MongoDBSSL001_Clients_192_168_10_101_CA.crt > MongoDBSSL001_Clients_192_168_10_101_CA.pem

5）：
type MongoDBSSL001_Clients_192_168_10_101_CA_Key.key >> MongoDBSSL001_Clients_192_168_10_101_CA.pem



MongoDB的基本使用：
1、命令行中启动MongodDB：
mongod --config D:\MongoDB\App\bin\mongod.cfg

2、命令行中使用mongosh连接MongodDB数据库：
mongosh --port 27777 --tls --tlsCertificateKeyFile D:\MongoDB\App\bin\ssl\MongoDBSSL001_Clients_192_168_10_101_CA.pem --tlsCAFile D:\MongoDB\App\bin\ssl\MongoDBSSL001_Root_CA.pem