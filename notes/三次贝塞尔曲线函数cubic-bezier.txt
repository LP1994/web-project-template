三次贝塞尔曲线函数cubic-bezier

linear( cubic-bezier( 0.0, 0.0, 1.0, 1.0 )、cubic-bezier( 1.0, 1.0, 0.0, 0.0 ) ): 动画以恒定速率从头到尾移动。

ease( cubic-bezier( 0.25, 0.1, 0.25, 1.0 ) ): 动画以低速开始，然后加快(这段时间较短)，在结束前变慢(这段时间较长)。MDN解释：动画开始缓慢，急剧加速，然后逐渐减慢。它类似ease-in-out，虽然它在开始时加速得更厉害。

ease-in( cubic-bezier( 0.42, 0.0, 1.0, 1.0 ) ): 动画以低速开始，动画以高速结束。MDN解释：动画开始缓慢，然后逐渐加速直到结束，此时它突然停止

ease-out( cubic-bezier( 0.0, 0.0, 0.58, 1.0 ) ): 动画以高速开始，动画以低速结束。MDN解释：动画突然开始，然后逐渐减慢到最后

ease-in-out( cubic-bezier( 0.42, 0.0, 0.58, 1.0 ) ): 动画以低速开始，然后加速到指定的最快速度，再降低速度以至结束，加快时间跟降低时间一直。MDN解释：动画开始缓慢，加速，然后减速到最后。一开始，它的行为就像这个ease-in功能; 最后，它就像ease-out功能一样。

step-start( steps( 1, start ) ): 动画会立即跳转到最终状态，直到结束(所有迭代都结束)。

step-end( steps( 1, end ) ): 动画保持其初始状态直到结束(所有迭代都结束)，此时它直接跳转到最终状态。

阶梯函数: 分段执行动画
steps( 大于0的正整数, end|start )

帧函数，现阶段被禁用了
frames(大于0的正整数)



注：
1、
cubic-bezier( x1, y1, x2, y2 )
在cubic-bezie函数中自己规定值，可能的值是X从0到1的数值，Y取值没有规定(允许负值)，但是也不宜过大。
2、
cubic-bezier有四个点:
X从0到1的数值，Y取值没有规定(允许负值)，但是也不宜过大。
两个默认点(固定点)，P0( 0, 0 )、 P3( 1, 1 )
两个控制点(动点)，两个点的四个坐标一一对应着函数中的四个值，P1( x1, y1 )、 P2( x2, y2 )
只要调整两个控制点P1和P2的坐标，最后形成的曲线就是动画曲线。