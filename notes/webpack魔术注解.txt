/* webpackChunkName: "my-chunk-name" */
/* webpackMode: "lazy" */
/* webpackExports: [ "default", "named" ] */
/* webpackInclude: /\.(js|cjs|mjs|ts|cts|mts|json)$/ */
/* webpackExclude: /\.noimport\.json$/ */
// 预取：将来可能需要一些导航资源
/* webpackPrefetch: true */
// 预加载：在当前导航期间也将需要资源，不正确地使用webpackPreload实际上会损害性能，因此使用它时要小心。
/* webpackPreload: true */
/* webpackIgnore: true */

用于worker的魔术注解：
const worker = new Worker( new URL( './Worker001.worker.js', import.meta.url ), {
  /* webpackEntryOptions: { filename: "workers/[name]_[contenthash].worker.js" } */
  type: 'classic',
  credentials: 'omit',
  name: 'Worker001',
} );
注意：
1、worker的魔术注解中的[name]受Worker构造函数的第二个参数中的name选项控制，如果没有设置name，则会使用一串数字组成的值作为[name]，如果设置了, 那么设置成什么值，[name]就会是什么。
2、如果没使用worker的魔术注解，那么worker文件的输出文件名受output.chunkFilename选项控制，当chunkFilename选项的值类型为函数时：( pathData, assetInfo ) => string，pathData.chunk.name受Worker构造函数的第二个参数中的name选项控制，name选项设置成什么值，pathData.chunk.name就会是什么，如果没有设置name选项，那么pathData.chunk.name为undefined。
