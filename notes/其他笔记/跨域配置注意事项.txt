1、关于跨域请求头。<br />
  1)当Access-Control-Allow-Origin:*时，不允许使用凭证（即不能设置诸如withCredentials:true、credentials:"include"之类），即不能携带上诸如Cookie之类的凭证。<br />
  2)当Access-Control-Allow-Origin:*时，只需确保客户端在发出CORS请求时凭据标志的值为false就可以了：<br />
    如果请求使用XMLHttpRequest发出，请确保withCredentials为false。<br />
    如果使用服务器发送事件，确保EventSource.withCredentials是false（这是默认值）。<br />
    如果使用Fetch API，请确保Request.credentials是"omit"，"omit"表示忽略诸如Cookie之类的凭证。<br />
  3)要想客户端既能发起跨域请求，又想将客户端携带的凭证（诸如Cookie之类的凭证）附加到跨域请求上传给服务端，<br />
    那么服务端的响应头得如下设置：<br />
    'Access-Control-Allow-Credentials': true、<br />
    'Access-Control-Allow-Origin': '允许发起跨域请求的客户端的Origin（如：https://localhost:8100），就是不可以是通配符“*”'、<br />
    'Vary': 'Origin' <br />
    客户端也得如下设置：<br />
    确保客户端在发出CORS请求时凭据标志的值为true就可以了：<br />
    如果请求使用XMLHttpRequest发出，请确保withCredentials为true。<br />
    如果使用服务器发送事件，确保EventSource.withCredentials是true。<br />
    如果使用Fetch API，请确保Request.credentials是"include"。<br />