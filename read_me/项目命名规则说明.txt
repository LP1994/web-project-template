解释
由于这个规则是后来写的，所以之前已有的代码改动起来费时(比如：CurrencyTools.esm.js)，
而且还要重新测试，所以就没去大规模改动，后面编写代码时尽量按以下规定来！！！

编程命名规范很重要！！！文档注解更重要！！！
友好自己、友好别人！！！

每家公司、每个组织、每个部门、每个人都有着自己的编码规范，只要各自统一规范就行，别一个项目里花里胡哨的各种命名方式。



1、文件夹
首字母小写，后面的每个单词首字母大写(不要用特殊字符或符号，一般用大小写字母和数字、下划线组成就行)
(是否以单词的复数形式命名根据使用情况而定)

2、文件名
每个单词首字母大写(不要用特殊字符或符号，一般用大小写字母和数字、下划线组成就行)
(特殊的例外)

3、类名、函数名
每个单词首字母大写

4、类成员
类的实例属性(也可以遵循“各种变量”的规则)、实例函数，首字母小写，后面的每个单词首字母大写
类的静态属性(也可以遵循“各种变量”的规则)、静态函数，每个单词首字母大写
类的私有属性(也可以遵循“各种变量”的规则)、私有函数，以#开头，而后第一个单词首字母小写，后面的每个单词首字母大写

5、类的实例对象
首字母小写，后面的每个单词首字母大写，最后以英文下划线“_”结尾，并在英文下划线“_”后加上"ins"(instance)
new函数时也是如此规则！！！
如：
let arr_ins = new MyArray()

6、各种变量(对象的属性名也可以遵循这个规定，根据情况而定吧)
首字母小写，后面的每个单词首字母大写；
最后以英文下划线“_”结尾，并在英文下划线“_”后加上该变量能确定在后面使用中所属的数据类型名的前面三个小写字母，如:
name_str、age_num、sex_und、item_nul、isStart_boo、year_obj、link_arr、mySymbol_sym、play_fun
elem_strArr
特殊的可以超过三个字母，也可以是大小写一起，只要能说明数据类型即可。如：
city_strObj、time_NaN、body_proObj(就是值Promise)
如果不确定数据类型或将存储多种数据类型，就不需要加英文下划线“_”以及不需要上面的规定

7、常量
首字母小写，后面的每个单词首字母大写；
最后以英文下划线“_”结尾，并在英文下划线“_”后加上该变量能确定在后面使用中所属的数据类型名的前面三个小写字母，并以英文大写"C"结尾，如:
name_strC、age_numC、sex_undC、item_nulC、isStart_booC、year_objC、link_arrC、mySymbol_symC、play_funC
elem_strArrC
特殊的可以超过三个字母，也可以是大小写一起，只要能说明数据类型即可。如：
city_strObjC、time_NaNC、body_proObjC(就是值Promise)
如果不确定数据类型或将存储多种数据类型，就按如下规定：
area_C

8、样式的类名(注意遵循CSS模块化的命名规则“BEM”)
首字母小写，后面的每个单词首字母大写( redBox )；
或者全小写，每个字母之间用短横线分割( red-box )；

9、样式的id名
每个单词首字母大写( BlueBox )；
或者全小写，每个字母之间用下滑线分割( blue_box )；

10、HTML标签上的自定义属性(HTML对大小写是不敏感的！！！)
以“data-”开始，后面的字母全小写，每个字母之间用短横线分割( data-red-box )；
